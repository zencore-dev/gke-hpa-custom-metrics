apiVersion: apps/v1
kind: Deployment
metadata:
  name: custom-metrics-writer
  namespace: metrics-writer
spec:
  selector:
    matchLabels:
      app: custom-metrics-writer
  template:
    metadata:
      labels:
        app: custom-metrics-writer
    spec:
      serviceAccountName: ksa-metrics-writer
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: "true"
      containers:
      - name: custom-metrics-writer
        image: us-docker.pkg.dev/<GCP_PROJECT_ID>/metric-writer/latest
        imagePullPolicy: IfNotPresent
        env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: custom-metrics-secrets
              key: db_user
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: custom-metrics-secrets
              key: db_password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: custom-metrics-secrets
              key: db_name
        - name: INSTANCE_HOST
          value: "127.0.0.1"
        - name: DB_PORT
          value: "3306"
        - name: PROJECT_ID
          value: "<GCP_PROJECT_ID>"
        - name: QUERY
          value: "select metric_value from metrics where metric_name = 'app-metric-1';"
        - name: METRIC_NAME
          value: "my-metric"
      - name: cloud-sql-proxy
          # It is recommended to use the latest version of the Cloud SQL proxy
          # Make sure to update on a regular schedule!
        image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.1.0
        args:
            # If connecting from a VPC-native GKE cluster, you can use the
            # following flag to have the proxy connect over private IP
            # - "--private-ip"
  
            # Enable structured logging with LogEntry format:
          - "--structured-logs"
  
            # Replace DB_PORT with the port the proxy should listen on
          - "--port=3306"
          - "<CLOUDSQL_CONNECTION_NAME>"
        securityContext:
            # The default Cloud SQL proxy image runs as the
            # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
          # You should use resource requests/limits as a best practice to prevent
          # pods from consuming too many resources and affecting the execution of
          # other pods. You should adjust the following values based on what your
          # application needs. For details, see
          # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          requests:
              # The proxy's memory use scales linearly with the number of active
              # connections. Fewer open connections will use less memory. Adjust
              # this value based on your application's requirements.
            memory: "2Gi"
              # The proxy's CPU use scales linearly with the amount of IO between
              # the database and the application. Adjust this value based on your
              # application's requirements.
            cpu:    "1"